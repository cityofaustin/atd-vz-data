#
# Builds Moped API
#
name: "Build & Publish Moped API"

on:
  push:
    branches:
      - main
      - production
    paths:
      - ".github/workflows/deploy_vz_api.yml"
      - ".github/workflows/aws-vz-api-helper.sh"
      - "atd-cr3-api/**"
  workflow_dispatch:
    inputs:
      description:
        default: ""
jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          architecture: "x64"
      # Get the code first
      - name: "Checkout"
        uses: actions/checkout@v3
      # Then install the AWC CLI tools & boto3
      - name: "Install AWS Cli"
        run: |
          sudo apt-get install python3-setuptools
          pip3 install awscli boto3 zappa virtualenv
      # Run the shell commands using the AWS environment variables
      - name: "Build"
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_MOPED_API_ZAPPA_CONFIGURAITON_FILE: ${{ secrets.AWS_MOPED_API_ZAPPA_CONFIGURAITON_FILE }}
        run: |
          export BRANCH_NAME=${GITHUB_REF##*/}
          echo "SHA: ${GITHUB_SHA}"
          echo "ACTION/BRANCH_NAME: ${BRANCH_NAME}"
          echo "GR: ${GITHUB_REF}"
          echo "PWD: $(pwd)"
          source $(pwd)/.github/workflows/aws-moped-api-helper.sh
          deploy_moped_api

#
# CircleCI Builder for Vision Zero
#

version: 2.1

jobs:
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - run:
          # Builds master and production branches only
          name: "Building Docker"
          command: |
            source .circleci/docker-helper.sh
            build_containers
      - run:
          # Builds master and production branches only
          name: "Build VZE API"
          command: |
            source .circleci/aws-helper.sh
            deploy_aws_lambda

workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - deploy:
          filters:
            branches:
              only:
                - master
                - production
